"use strict";(self.webpackChunkphaser_plus_docs=self.webpackChunkphaser_plus_docs||[]).push([[477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"tutorial-optimize-game-memory","metadata":{"permalink":"/blog/tutorial-optimize-game-memory","source":"@site/blog/2023-01-11-tutorial-optimize-game-memory.md","title":"Tutorial - Optimizing Memory Consumption in HTML5 Games","description":"Welcome to my blog post about improving game performance through the use of Object pools.","date":"2023-01-11T00:00:00.000Z","formattedDate":"January 11, 2023","tags":[{"label":"tutorial","permalink":"/blog/tags/tutorial"}],"readingTime":1.36,"hasTruncateMarker":false,"authors":[{"name":"Daniel Kalevski","title":"Maintainer","url":"https://github.com/kalevski","imageURL":"https://github.com/kalevski.png","key":"kalevski"}],"frontMatter":{"slug":"tutorial-optimize-game-memory","title":"Tutorial - Optimizing Memory Consumption in HTML5 Games","authors":"kalevski","tags":["tutorial"]},"nextItem":{"title":"Tutorial - Create Phaser Project","permalink":"/blog/tutorial-phaser-project"}},"content":"Welcome to my blog post about improving game performance through the use of Object pools.\\n\\nAs a game developer, it\'s likely that you\'ve had to deal with the problem of instantiating a large number of objects for a specific class, such as particles with a short lifetime that need to be destroyed. One of the challenges of this type of game logic is that JavaScript\'s model is based on the garbage collection pattern, which means that developers do not have direct control over allocated memory.\\n\\n# Problem\\n\\nWhen memory locations (variables) are marked as null, they are collected by the garbage collector and removed from memory. However, when the garbage collector needs to dispose of a lot of objects, it takes a lot of processing time, which can negatively impact the performance of the game.\\n\\nIn that case, if you profile the memory, you will see something like what is shown in the picture below\\n\\n![before](https://user-images.githubusercontent.com/10467454/211951892-46ea9408-e75d-4804-9229-324a557c515b.jpg)\\n\\n# Solution\\n\\nBut there\'s a solution to this problem, and it\'s called the Object pools pattern.\\n\\nThe Object pools pattern is an implementation that helps to reuse disposed objects instead of creating new ones. By reusing objects, we can reduce the number of objects that need to be created and collected by the garbage collector, which in turn improves the performance of the game.\\n\\nAfter using Object pools, you will get results like this\\n\\n![after](https://user-images.githubusercontent.com/10467454/211951895-162e0910-6e3c-414d-8f40-0e47a5860dca.jpg)\\n\\n# Phaser Plus Object Pools\\n\\n```js\\nclass CreateGameObjects extends Scene {\\n\\n    onCreate() {\\n        this.pool.register(\'myObject\', MyObject)\\n\\n        // create object using pool\\n        let turtle = this.pool.obtain(\'myObject\')\\n        this.add.existing(turtle)\\n\\n        // remove object from scene and retreive back to the pool\\n        this.children.remove(turtle)\\n        this.pool.release(turtle)\\n    }\\n    \\n}\\n```"},{"id":"tutorial-phaser-project","metadata":{"permalink":"/blog/tutorial-phaser-project","source":"@site/blog/2023-01-10-tutorial-phaser-project.md","title":"Tutorial - Create Phaser Project","description":"Hi,","date":"2023-01-10T00:00:00.000Z","formattedDate":"January 10, 2023","tags":[{"label":"tutorial","permalink":"/blog/tags/tutorial"}],"readingTime":0.715,"hasTruncateMarker":false,"authors":[{"name":"Daniel Kalevski","title":"Maintainer","url":"https://github.com/kalevski","imageURL":"https://github.com/kalevski.png","key":"kalevski"}],"frontMatter":{"slug":"tutorial-phaser-project","title":"Tutorial - Create Phaser Project","authors":"kalevski","tags":["tutorial"]},"prevItem":{"title":"Tutorial - Optimizing Memory Consumption in HTML5 Games","permalink":"/blog/tutorial-optimize-game-memory"},"nextItem":{"title":"Dev log 0 - Welcome","permalink":"/blog/devlog-0-welcome"}},"content":"Hi,\\n\\nthis is my first tutorial, so I hope it will be useful for all those who plan to start a new project using Phaser.\\n\\nAs part of a **phaser-plus** project I started recently, there is [@phaser-plus/cli](https://www.npmjs.com/package/@phaser-plus/cli) - a command line tool for creating and developing Phaser projects.\\n\\n# What is Phaser?\\n[Phaser](https://phaser.io). is a free and open source software developed and owned by [Richard Davey](https://github.com/photonstorm). You can visit their [funding page](https://www.patreon.com/join/photonstorm) and help them to make Phaser even better.\\n\\n# How do I make a project?\\nBefore you start creating a project, you need to have **NodeJS 16+** installed on your machine.\\nIf you already have **NodeJS 16+** installed, you can create a project by executing:\\n```\\nnpx @phaser-plus/cli init --template=phaser my-phaser-game\\n```\\n\\n# CLI Features\\n- Simple setup\\n- Hot module reload\\n- Optimized production build\\n- Support for Web workers"},{"id":"devlog-0-welcome","metadata":{"permalink":"/blog/devlog-0-welcome","source":"@site/blog/2023-01-09-welcome.md","title":"Dev log 0 - Welcome","description":"Hi,","date":"2023-01-09T00:00:00.000Z","formattedDate":"January 9, 2023","tags":[{"label":"devlog","permalink":"/blog/tags/devlog"}],"readingTime":1.24,"hasTruncateMarker":false,"authors":[{"name":"Daniel Kalevski","title":"Maintainer","url":"https://github.com/kalevski","imageURL":"https://github.com/kalevski.png","key":"kalevski"}],"frontMatter":{"slug":"devlog-0-welcome","title":"Dev log 0 - Welcome","authors":"kalevski","tags":["devlog"]},"prevItem":{"title":"Tutorial - Create Phaser Project","permalink":"/blog/tutorial-phaser-project"}},"content":"Hi,\\n\\nWelcome to my first blog post!\\n\\nMy name is [Daniel Kalevski](https://kalevski.dev), Software developer passionate about creating games especially with Phaser.\\nI started using Phaser before 8 years for creating \\"Point and Click\\" games.\\n\\nCurrently, I am proud of the large number of games I have created that are currently being used commercially, and I am also proud that after 8 years of using Phaser and developing games, I am about to release my first indie game.\\n\\n# What is Phaser Plus ?\\n\\nI want Phaser Plus to be my contribution to the Phaser community as a way to thank the members for all the help I have received in the past years. My goals for Phaser Plus are to enrich the list of tutorials, plugins, and extensions for Phaser and also to simplify the process of developing games.\\n\\nCurrently, Phaser Plus offers a project creation tool, debugger, an extension for creating isometric games and a guide for building larger projects.\\n\\n# What is next ?\\n\\nIn the future, I plan to continue developing Phaser Plus and adding more useful features and tools. Some ideas I have for future development include:\\n - Split screen feature\\n - Tool for creating audio sprites\\n - Utilities and helpers for common game features\\n\\nI hope you find Phaser Plus helpful and that it makes your game development process more efficient and enjoyable. If you have any suggestions or ideas for future development, please don\'t hesitate to reach out and [let me know](https://github.com/kalevski/phaser-plus/discussions)!"}]}')}}]);