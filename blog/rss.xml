<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Phaser Plus Blog</title>
        <link>https://phaser-plus.kalevski.dev/blog</link>
        <description>Phaser Plus Blog</description>
        <lastBuildDate>Wed, 11 Jan 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Tutorial - Optimizing Memory Consumption in HTML5 Games]]></title>
            <link>https://phaser-plus.kalevski.dev/blog/tutorial-optimize-game-memory</link>
            <guid>tutorial-optimize-game-memory</guid>
            <pubDate>Wed, 11 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Welcome to my blog post about improving game performance through the use of Object pools.]]></description>
            <content:encoded><![CDATA[<p>Welcome to my blog post about improving game performance through the use of Object pools.</p><p>As a game developer, it's likely that you've had to deal with the problem of instantiating a large number of objects for a specific class, such as particles with a short lifetime that need to be destroyed. One of the challenges of this type of game logic is that JavaScript's model is based on the garbage collection pattern, which means that developers do not have direct control over allocated memory.</p><h1>Problem</h1><p>When memory locations (variables) are marked as null, they are collected by the garbage collector and removed from memory. However, when the garbage collector needs to dispose of a lot of objects, it takes a lot of processing time, which can negatively impact the performance of the game.</p><p>In that case, if you profile the memory, you will see something like what is shown in the picture below</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/10467454/211951892-46ea9408-e75d-4804-9229-324a557c515b.jpg" alt="before" class="img_ev3q"></p><h1>Solution</h1><p>But there's a solution to this problem, and it's called the Object pools pattern.</p><p>The Object pools pattern is an implementation that helps to reuse disposed objects instead of creating new ones. By reusing objects, we can reduce the number of objects that need to be created and collected by the garbage collector, which in turn improves the performance of the game.</p><p>After using Object pools, you will get results like this</p><p><img loading="lazy" src="https://user-images.githubusercontent.com/10467454/211951895-162e0910-6e3c-414d-8f40-0e47a5860dca.jpg" alt="after" class="img_ev3q"></p><h1>Phaser Plus Object Pools</h1><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">class</span><span class="token plain"> </span><span class="token class-name">CreateGameObjects</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">extends</span><span class="token plain"> </span><span class="token class-name">Scene</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">onCreate</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">this</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token property-access">pool</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">register</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'myObject'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token maybe-class-name">MyObject</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token comment" style="color:rgb(98, 114, 164)">// create object using pool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">let</span><span class="token plain"> turtle </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">this</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token property-access">pool</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">obtain</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'myObject'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">this</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token property-access">add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">existing</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">turtle</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token comment" style="color:rgb(98, 114, 164)">// remove object from scene and retreive back to the pool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">this</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token property-access">children</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">remove</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">turtle</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">this</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token property-access">pool</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">release</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">turtle</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>tutorial</category>
        </item>
        <item>
            <title><![CDATA[Tutorial - Create Phaser Project]]></title>
            <link>https://phaser-plus.kalevski.dev/blog/tutorial-phaser-project</link>
            <guid>tutorial-phaser-project</guid>
            <pubDate>Tue, 10 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Hi,]]></description>
            <content:encoded><![CDATA[<p>Hi,</p><p>this is my first tutorial, so I hope it will be useful for all those who plan to start a new project using Phaser.</p><p>As part of a <strong>phaser-plus</strong> project I started recently, there is <a href="https://www.npmjs.com/package/@phaser-plus/cli" target="_blank" rel="noopener noreferrer">@phaser-plus/cli</a> - a command line tool for creating and developing Phaser projects.</p><h1>What is Phaser?</h1><p><a href="https://phaser.io" target="_blank" rel="noopener noreferrer">Phaser</a>. is a free and open source software developed and owned by <a href="https://github.com/photonstorm" target="_blank" rel="noopener noreferrer">Richard Davey</a>. You can visit their <a href="https://www.patreon.com/join/photonstorm" target="_blank" rel="noopener noreferrer">funding page</a> and help them to make Phaser even better.</p><h1>How do I make a project?</h1><p>Before you start creating a project, you need to have <strong>NodeJS 16+</strong> installed on your machine.
If you already have <strong>NodeJS 16+</strong> installed, you can create a project by executing:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">npx @phaser-plus/cli init --template=phaser my-phaser-game</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h1>CLI Features</h1><ul><li>Simple setup</li><li>Hot module reload</li><li>Optimized production build</li><li>Support for Web workers</li></ul>]]></content:encoded>
            <category>tutorial</category>
        </item>
        <item>
            <title><![CDATA[Dev log 0 - Welcome]]></title>
            <link>https://phaser-plus.kalevski.dev/blog/devlog-0-welcome</link>
            <guid>devlog-0-welcome</guid>
            <pubDate>Mon, 09 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Hi,]]></description>
            <content:encoded><![CDATA[<p>Hi,</p><p>Welcome to my first blog post!</p><p>My name is <a href="https://kalevski.dev" target="_blank" rel="noopener noreferrer">Daniel Kalevski</a>, Software developer passionate about creating games especially with Phaser.
I started using Phaser before 8 years for creating "Point and Click" games.</p><p>Currently, I am proud of the large number of games I have created that are currently being used commercially, and I am also proud that after 8 years of using Phaser and developing games, I am about to release my first indie game.</p><h1>What is Phaser Plus ?</h1><p>I want Phaser Plus to be my contribution to the Phaser community as a way to thank the members for all the help I have received in the past years. My goals for Phaser Plus are to enrich the list of tutorials, plugins, and extensions for Phaser and also to simplify the process of developing games.</p><p>Currently, Phaser Plus offers a project creation tool, debugger, an extension for creating isometric games and a guide for building larger projects.</p><h1>What is next ?</h1><p>In the future, I plan to continue developing Phaser Plus and adding more useful features and tools. Some ideas I have for future development include:</p><ul><li>Split screen feature</li><li>Tool for creating audio sprites</li><li>Utilities and helpers for common game features</li></ul><p>I hope you find Phaser Plus helpful and that it makes your game development process more efficient and enjoyable. If you have any suggestions or ideas for future development, please don't hesitate to reach out and <a href="https://github.com/kalevski/phaser-plus/discussions" target="_blank" rel="noopener noreferrer">let me know</a>!</p>]]></content:encoded>
            <category>devlog</category>
        </item>
    </channel>
</rss>